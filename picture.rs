//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "picture")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Vec<u8>,
    pub directory: String,
    // #[sea_orm(indexed)]
    pub directory_id: Vec<u8>,
    pub filename: String,
    pub raw_extension: Option<String>,
    pub short_hash: Option<Vec<u8>>,
    pub full_hash: Option<Vec<u8>>,
    pub capture_time: Option<DateTime>,
    pub rating: String,
    pub flag: Option<String>,
    pub hidden: Option<i32>,
    pub selection: String,
    pub thumbnail: Option<Vec<u8>>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::directory::Entity",
        from = "Column::DirectoryId",
        to = "super::directory::Column::Id"
    )]
    Directory,
}

impl Related<super::directory::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Directory.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
